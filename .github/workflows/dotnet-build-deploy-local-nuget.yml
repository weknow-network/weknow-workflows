name: Build & Deploy NuGet

# doc:               https://docs.github.com/en/actions
# variables:         https://docs.github.com/en/actions/learn-github-actions/environment-variables
# secrets:           https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#example-17
# env:               https://docs.github.com/en/actions/learn-github-actions/environment-variables
# reusable workflow: https://docs.github.com/en/actions/learn-github-actions/reusing-workflows#access-to-reusable-workflows

on: 
  workflow_call:
    inputs:
      build-config:
        type: string
        description: "Build configuration like Release, Debug, etc."
        required: false
        default: "Release"
      dotnet-version:
        type: string
        description: "The .NET version."
        required: false
        default: "6.0.x"
      include-prerelease:
        type: boolean
        description: "Indicate whether to include prerelease .NET version."
        required: false
        default: false
  
jobs:
  build-publish_nuget:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    name: Build
    runs-on: ubuntu-latest    
    # if: github.ref == 'refs/heads/master' || github.event_name == 'release'   

    steps:
      - uses: actions/checkout@v2

      - name: Build Setup (.NET)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          include-prerelease: ${{ inputs.include-prerelease }}
  
      - name: .NET Restore dependencies
        run: dotnet restore /property:Configuration=${{ inputs.build-config }} 
        shell: bash
      - name: .NET Build
        run: dotnet build  --configuration ${{ inputs.build-config }} --no-restore -o out
        shell: bash
      - name: .NET Test
        run: dotnet test --filter Category=CI --configuration ${{ inputs.build-config }} --no-restore --no-build --verbosity normal -o out
        shell: bash

      - name: ls
        run: echo $(ls)
        shell: bash

      # - name: NuGet push 
      #   run: |
      #     dotnet nuget push ./out/**/*.nupkg --source github -k ${{ secrets.UPLOAD_PACKAGE_LOCAL }} --skip-duplicate

      # - name: NuGet push ({{ github.repository_owner }})
      #   run: |
      #     dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github-ci --username ${{ github.repository_owner }} --password ${{ github.token }} --store-password-in-clear-text
      #     dotnet nuget push ./out/**/*.nupkg --source github-ci --skip-duplicate --no-symbols false
          
      - name: GitHub Package Registry Tool Install
        run: dotnet tool install --global --verbosity minimal --no-cache gpr
      - name: NuGet Push (repo = ${{ github.repository }}) 
        run: gpr push --api-key ${{ secrets.UPLOAD_PACKAGE_LOCAL }} --repository weknow-network --retries 3 ./out/**/*.nupkg
        # run: gpr push --api-key ${{ secrets.UPLOAD_PACKAGE_LOCAL }} --repository ${{ github.repository }} --retries 3 ./out/**/*.nupkg
  
  on-failure:
    # uses: weknow-network/weknow-workflows/.github/workflows/on-failure.yml@main
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Cancel Message
        run: echo 'Canceled - Dependencies failure'

      - name: Throw
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Not runs, because of previous failure')
